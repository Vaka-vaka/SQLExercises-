Содержание урока
В запросах SQL могут участвовать несколько таблиц базы данных. При этом необходимо указать как эти таблицы соединены между собой. 

Операция соединения JOIN предназначена для обеспечения выборки данных из двух таблиц и включения этих данных в один результирующий набор. При необходимости соединения не двух, а нескольких таблиц, операция соединения применяется несколько раз (последовательно).

Операторы соединения входят в раздел FROM SQL запросов.

В данном уроке будут созданы запросы:

для двух таблиц, внутреннее соединение INNER JOIN;
для двух таблиц, внешние соединения LEFT JOIN и RIGHT JOIN;
для двух таблиц, перекрестное соединение CROSS JOIN;
выборки данных из нескольких таблиц;
выборки данных из нескольких таблиц с группировкой;
выборки данных с применением вложенных запросов;
вложенные запросы в операторах соединения,
операторы соединения, использование USING.
Структура и наполнение таблиц
Концептуальная схема базы данных:



 

 

 

 

Логическая схема базы данных:



 

 

 

 

 

 

 

 

Таблица author(создание, заполнение):

author_id	name_author
1	Булгаков М.А.
2	Достоевский Ф.М.
3	Есенин С.А.
4	Пастернак Б.Л.
5	Лермонтов М.Ю.
Таблица genre(создание, заполнение, рассмотрено в качестве примеров):

genre_id	name_genre
1	Роман
2	Поэзия
3	Приключения
Таблица book (создание, заполнение):

book_id	title	author_id	genre_id	price	amount
1	Мастер и Маргарита	1	1	670.99	3
2	Белая гвардия	1	1	540.50	5
3	Идиот	2	1	460.00	10
4	Братья Карамазовы	2	1	799.01	3
5	Игрок	2	1	480.50	10
6	Стихотворения и поэмы	3	2	650.00	15
7	Черный человек	3	2	570.20	6
8	Лирика	4	2	518.99	2
===================================================================================
Соединение INNER JOIN
Оператор внутреннего соединения INNER JOIN соединяет две таблицы. Порядок таблиц для оператора неважен, поскольку оператор является симметричным.

SELECT
 ...
FROM
    таблица_1 INNER JOIN  таблица_2
    ON условие
...
Результат запроса формируется так:

каждая строка одной таблицы сопоставляется с каждой строкой второй таблицы;
для полученной «соединённой» строки проверяется условие соединения;
если условие истинно, в таблицу результата добавляется соответствующая «соединённая» строка;
Пример

Вывести название книг и их авторов.

Запрос:

SELECT title, name_author
FROM 
    author INNER JOIN book
    ON author.author_id = book.author_id;
Поскольку поля author_id в таблицах book и author называются одинаково, необходимо в запросах указывать полную ссылку на них (book.author_id и author.author_id).

Результат:

+-----------------------+------------------+
| title                 | name_author      |
+-----------------------+------------------+
| Мастер и Маргарита    | Булгаков М.А.    |
| Белая гвардия         | Булгаков М.А.    |
| Идиот                 | Достоевский Ф.М. |
| Братья Карамазовы     | Достоевский Ф.М. |
| Игрок                 | Достоевский Ф.М. |
| Стихотворения и поэмы | Есенин С.А.      |
| Черный человек        | Есенин С.А.      |
| Лирика                | Пастернак Б.Л.   |
+-----------------------+------------------+
В данном запросе осуществляется соединение главной таблицы author и зависимой таблицы book по ключевому столбцу author.author_id и внешнему ключу book.author_id. При этом в результирующую таблицу запроса включаются все строки, в которых значения этих столбцов совпадают. Другими словами строки зависимой таблицы book дополняются фамилией и инициалами авторов из таблицы author.

Задание
Вывести название, жанр и цену тех книг, количество которых больше 8, в отсортированном по убыванию цены виде.

Логическая схема базы данных:



Текст задания (чтобы не прокручивать страницу):

Вывести название, жанр и цену тех книг, количество которых больше 8, в отсортированном по убыванию цены виде.

Результат
Структура и наполнение таблиц
Таблица genre:
+----------+-------------+
| genre_id | name_genre  |
+----------+-------------+
| 1        | Роман       |
| 2        | Поэзия      |
| 3        | Приключения |
+----------+-------------+

Таблица author:
+-----------+------------------+
| author_id | name_author      |
+-----------+------------------+
| 1         | Булгаков М.А.    |
| 2         | Достоевский Ф.М. |
| 3         | Есенин С.А.      |
| 4         | Пастернак Б.Л.   |
| 5         | Лермонтов М.Ю.   |
+-----------+------------------+

Таблица book:
+---------+-----------------------+-----------+----------+--------+--------+
| book_id | title                 | author_id | genre_id | price  | amount |
+---------+-----------------------+-----------+----------+--------+--------+
| 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |
| 2       | Белая гвардия         | 1         | 1        | 540.50 | 5      |
| 3       | Идиот                 | 2         | 1        | 460.00 | 10     |
| 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |
| 5       | Игрок                 | 2         | 1        | 480.50 | 10     |
| 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |
| 7       | Черный человек        | 3         | 2        | 570.20 | 6      |
| 8       | Лирика                | 4         | 2        | 518.99 | 2      |
+---------+-----------------------+-----------+----------+--------+--------+
Enter an SQL query
Correct answer from 30,244 learners
Total 67% of tries are correct
 Totally right.
Query result:
+-----------------------+------------+--------+
| title                 | name_genre | price  |
+-----------------------+------------+--------+
| Стихотворения и поэмы | Поэзия     | 650.00 |
| Игрок                 | Роман      | 480.50 |
| Идиот                 | Роман      | 460.00 |
+-----------------------+------------+--------+
Affected rows: 3

1
SELECT title, name_genre, price
2
FROM genre INNER JOIN book
3
    ON genre.genre_id = book.genre_id
4
WHERE amount > 8
5
ORDER BY price DESC
6
;
===================================================================
Внешнее соединение LEFT и RIGHT OUTER JOIN
Оператор внешнего соединения LEFT OUTER JOIN  (можно использовать LEFT JOIN) соединяет две таблицы. Порядок таблиц для оператора важен, поскольку оператор не является симметричным.

SELECT
 ...
FROM
    таблица_1 LEFT JOIN  таблица_2
    ON условие
...
Результат запроса формируется так:

в результат включается внутреннее соединение (INNER JOIN) первой и второй таблицы в соответствии с условием;
затем в результат добавляются те записи первой таблицы, которые не вошли во внутреннее соединение на шаге 1, для таких записей соответствующие поля второй таблицы заполняются значениями NULL.
Соединение RIGHT JOIN действует аналогично, только в пункте 2 первая таблица меняется на вторую и наоборот.

Пример

Вывести название всех книг каждого автора, если книг некоторых авторов в данный момент нет на складе – вместо названия книги указать Null.

Запрос:

SELECT name_author, title 
FROM author LEFT JOIN book
     ON author.author_id = book.author_id
ORDER BY name_author;     
Результат:

+------------------+-----------------------+
| name_author      | title                 |
+------------------+-----------------------+
| Булгаков М.А.    | Мастер и Маргарита    |
| Булгаков М.А.    | Белая гвардия         |
| Достоевский Ф.М. | Игрок                 |
| Достоевский Ф.М. | Идиот                 |
| Достоевский Ф.М. | Братья Карамазовы     |
| Есенин С.А.      | Стихотворения и поэмы |
| Есенин С.А.      | Черный человек        |
| Лермонтов М.Ю.   | NULL                  |
| Пастернак Б.Л.   | Лирика                |
+------------------+-----------------------+
Так как в таблице book нет книг Лермонтова, напротив этой фамилии стоит Null.

Задание
Вывести все жанры, которые не представлены в книгах на складе.

Логическая схема базы данных:



Пояснение
Текст задания (чтобы не прокручивать страницу):

Вывести все жанры, которые не представлены в книгах на складе.

Результат
Структура и наполнение таблиц
Enter an SQL query
Correct answer from 29,370 learners
Total 68% of tries are correct
 You're right!
Query result:
+-------------+
| name_genre  |
+-------------+
| Приключения |
+-------------+
Affected rows: 1

1
SELECT name_genre 
2
FROM genre LEFT JOIN book
3
    ON genre.genre_id = book.genre_id
4
WHERE title IS NULL 
5
;
6
​====================================================================
Перекрестное соединение CROSS JOIN
Оператор перекрёстного соединения, или декартова произведения CROSS JOIN (в запросе вместо ключевых слов можно поставить запятую между таблицами) соединяет две таблицы. Порядок таблиц для оператора неважен, поскольку оператор является симметричным. Его структура:

SELECT
 ...
FROM
    таблица_1 CROSS JOIN  таблица_2
...
или

SELECT
 ...
FROM
    таблица_1, таблица_2
...
Результат запроса формируется так: каждая строка одной таблицы соединяется с каждой строкой другой таблицы, формируя  в результате все возможные сочетания строк двух таблиц.

Например, запрос:

SELECT name_author, name_genre
FROM 
    author, genre;
каждому автору из таблицы author поставит в соответствие все возможные жанры из таблицы genre:

+------------------+-------------+
| name_author      | name_genre  |
+------------------+-------------+
| Булгаков М.А.    | Роман       |
| Булгаков М.А.    | Поэзия      |
| Булгаков М.А.    | Приключения |
| Достоевский Ф.М. | Роман       |
| Достоевский Ф.М. | Поэзия      |
| Достоевский Ф.М. | Приключения |
| Есенин С.А.      | Роман       |
| Есенин С.А.      | Поэзия      |
| Есенин С.А.      | Приключения |
| Пастернак Б.Л.   | Роман       |
| Пастернак Б.Л.   | Поэзия      |
| Пастернак Б.Л.   | Приключения |
| Лермонтов М.Ю.   | Роман       |
| Лермонтов М.Ю.   | Поэзия      |
| Лермонтов М.Ю.   | Приключения |
+------------------+-------------+
Задание
Есть список городов, хранящийся в таблице city:

city_id	name_city
1	Москва
2	Санкт-Петербург
3	Владивосток
Необходимо в каждом городе провести выставку книг каждого автора в течение 2020 года. Дату проведения выставки выбрать случайным образом. Создать запрос, который выведет город, автора и дату проведения выставки. Последний столбец назвать Дата. Информацию вывести, отсортировав сначала в алфавитном порядке по названиям городов, а потом по убыванию дат проведения выставок.

Структура таблицы:



Пояснение
Текст задания (чтобы не прокручивать страницу):

 Есть список городов, хранящийся в таблице city:

city_id	name_city
1	Москва
2	Санкт-Петербург
3	Владивосток
Необходимо в каждом городе провести выставку книг каждого автора в течение 2020 года. Дату проведения выставки выбрать случайным образом. Создать запрос, который выведет город, автора и дату проведения выставки. Последний столбец назвать Дата. Информацию вывести, отсортировав сначала в алфавитном порядке по названиям городов, а потом по убыванию дат проведения выставок.

Результат
Структура и наполнение таблиц
Enter an SQL query
Correct answer from 27,665 learners
Total 53% of tries are correct
 Totally right.
Query result:
+-----------------+------------------+------------+
| name_city       | name_author      | Дата       |
+-----------------+------------------+------------+
| Владивосток     | Достоевский Ф.М. | 2020-12-07 |
| Владивосток     | Булгаков М.А.    | 2020-12-06 |
| Владивосток     | Пастернак Б.Л.   | 2020-10-21 |
| Владивосток     | Есенин С.А.      | 2020-07-10 |
| Владивосток     | Лермонтов М.Ю.   | 2020-04-04 |
| Москва          | Булгаков М.А.    | 2020-09-07 |
| Москва          | Лермонтов М.Ю.   | 2020-08-28 |
| Москва          | Есенин С.А.      | 2020-06-10 |
| Москва          | Достоевский Ф.М. | 2020-04-10 |
| Москва          | Пастернак Б.Л.   | 2020-01-26 |
| Санкт-Петербург | Есенин С.А.      | 2020-10-20 |
| Санкт-Петербург | Пастернак Б.Л.   | 2020-09-11 |
| Санкт-Петербург | Достоевский Ф.М. | 2020-08-12 |
| Санкт-Петербург | Булгаков М.А.    | 2020-06-30 |
| Санкт-Петербург | Лермонтов М.Ю.   | 2020-02-01 |
+-----------------+------------------+------------+
Affected rows: 15

SELECT name_city, name_author, 
      DATE_ADD('2020-01-01', INTERVAL FLOOR(RAND() * 365)DAY) AS Дата
FROM city, author
ORDER BY name_city ASC, Дата DESC
;
1
SELECT name_city, name_author, 
2
      DATE_ADD('2020-01-01', INTERVAL FLOOR(RAND() * 365)DAY) AS Дата
3
FROM city, author
4
ORDER BY name_city ASC, Дата DESC
5
;
6
​================================================================================
Запросы на выборку из нескольких таблиц
Запрос на выборку может выбирать данные из двух и более таблиц базы данных. При этом таблицы должны быть логически связаны между собой. Для каждой пары таблиц, включаемых в запрос, необходимо указать свой оператор соединения. Наиболее распространенным является внутреннее соединение INNER JOIN, поэтому в примерах будем использовать его.

Пусть таблицы связаны между собой следующим образом:



тогда запрос на выборку для этих таблиц будет иметь вид:

SELECT
 ...
FROM
    first 
    INNER JOIN  second ON first.first_id = second.first_id
    INNER JOIN  third  ON second.second_id = third.second_id
...
Если же таблицы связаны так:



то запрос на выборку выглядит следующим образом:

SELECT
 ...
FROM
    first 
    INNER JOIN  third ON first.first_id = third.first_id
    INNER JOIN second ON third.second_id = second.second_id 
...
В этом случае рекомендуется соединение таблиц записывать последовательно, «по кругу»: first → third → second.

Пример

Вывести информацию о тех книгах, их авторах и жанрах, цена которых принадлежит интервалу от 500  до 700 рублей  включительно.

Запрос:

SELECT title, name_author, name_genre, price, amount
FROM
    author 
    INNER JOIN  book ON author.author_id = book.author_id
    INNER JOIN genre ON genre.genre_id = book.genre_id
WHERE price BETWEEN 500 AND 700;
Результат:

+-----------------------+----------------+------------+--------+--------+
| title                 | name_author    | name_genre | price  | amount |
+-----------------------+----------------+------------+--------+--------+
| Мастер и Маргарита    | Булгаков М.А.  | Роман      | 670.99 | 3      |
| Белая гвардия         | Булгаков М.А.  | Роман      | 540.50 | 5      |
| Стихотворения и поэмы | Есенин С.А.    | Поэзия     | 650.00 | 15     |
| Черный человек        | Есенин С.А.    | Поэзия     | 570.20 | 6      |
| Лирика                | Пастернак Б.Л. | Поэзия     | 518.99 | 2      |
+-----------------------+----------------+------------+--------+--------+
Задание
 Вывести информацию о книгах (жанр, книга, автор), относящихся к жанру, включающему слово «роман» в отсортированном по названиям книг виде.

Логическая схема базы данных:



Текст задания (чтобы не прокручивать страницу):

 Вывести информацию о книгах (жанр, книга, автор), относящихся к жанру, включающему слово «роман» в отсортированном по названиям книг виде.

Результат
Структура и наполнение таблиц
Enter an SQL query
Correct answer from 27,758 learners
Total 76% of tries are correct
 You're right!
Query result:
+------------+--------------------+------------------+
| name_genre | title              | name_author      |
+------------+--------------------+------------------+
| Роман      | Белая гвардия      | Булгаков М.А.    |
| Роман      | Братья Карамазовы  | Достоевский Ф.М. |
| Роман      | Игрок              | Достоевский Ф.М. |
| Роман      | Идиот              | Достоевский Ф.М. |
| Роман      | Мастер и Маргарита | Булгаков М.А.    |
+------------+--------------------+------------------+
Affected rows: 5

1
SELECT name_genre, title, name_author
2
FROM genre
3
        INNER JOIN book ON genre.genre_id = book.genre_id
4
        INNER JOIN author ON book.author_id = author.author_id
5
WHERE name_genre = 'роман'
6
ORDER BY title;
=========================================================================

