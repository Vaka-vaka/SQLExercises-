Содержание урока
Средствами SQL запросов можно выбирать и обрабатывать данные не только из одной таблицы,
 но из нескольких связанных таблиц. В данном уроке мы рассмотрим способы соединения таблиц:

связь между таблицами «один ко многим»;
связь между таблицами «многие ко многим»;
создание таблицы с внешними ключами;
действия при удалении записи главной таблицы;
заполнение таблицы с внешними ключами;
добавление данных в таблицу с внешними ключами.
======================================================
Связь «один ко многим»
Рассмотрим таблицу book(в ней столбец author переименован в name_author):

book_id	title	name_author	price	amount
1	Мастер и Маргарита	Булгаков М.А.	670.99	3
2	Белая гвардия	Булгаков М.А.	540.50	5
3	Идиот	Достоевский Ф.М.	460.00	10
4	Братья Карамазовы	Достоевский Ф.М.	799.01	2
5	Стихотворения и поэмы	Есенин С.А.	650.00	15
В этой таблице фамилии авторов повторяются для нескольких книг.
 А что, если придется вместо инициалов для каждого автора хранить
 его полное имя и отчество? Тогда, если в таблице содержится информация
 о 50 книгах Достоевского, придется 50 раз исправлять «Ф.М.» на 
«Федор Михайлович». При этом, если в некоторых записях использовать
 «Фёдор Михайлович» (c буквой ё), то мы вообще получим двух разных авторов... 

Чтобы устранить эту проблему в реляционных базах данных создается 
новая таблица author,  в которой перечисляются все различные авторы,
 а затем эта таблица связывается с таблицей book. При этом такая связь
 называется «один ко многим», таблица author называется главной, 
таблица book – связанной или подчиненной. 

Связь «один ко многим» имеет место, когда одной записи главной 
таблицы соответствует несколько записей связанной таблицы, а 
каждой записи связанной таблицы соответствует только одна запись 
главной таблицы. Обозначается это так:



Этапы реализации связи «один ко многим» на следующем примере:

Один автор может написать несколько книг, а одна книга написана 
только одним автором. Для каждой книги известны ее количество и цена.

1. Создать таблицу author,  в которую включить уникальных авторов книг, хранящихся на складе:



2. Обе таблицы должны содержать первичный ключ, в таблице  bookон уже есть,
  в таблицу authorдобавим ключ author_id:



3. Включить в таблицу book связанный столбец (внешний ключ, FOREIGN KEY),
 соответствующий по имени и типу ключевому столбцу главной таблицы 
(в нашем случае это столбец author_id). Для наглядности связь на схеме
 обозначается стрелкой от ключевого столбца главной таблицы к внешнему ключу связной таблицы:



Задание
Добавить новую характеристику книги – ее жанр, если считать, 
что каждая книга относится к одному жанру, то есть между ними
 определена связь «один ко многим». Расположите в правильном 
порядке этапы связывания таблицы с жанрами (genre) и таблицы book.

Sort a given list
Correct answer from 32,472 learners
Total 75% of tries are correct
 Great!
============================================================
Связь «многие ко многим»
На предыдущем шаге мы реализовали связь «один ко многим» для книг и авторов. Она означает, что каждый автор написал несколько книг, но каждую книгу написал только один автор. На самом деле, это не совсем верное утверждение. Например, книга «12 стульев» написана двумя авторами Ильфом И.А. и Петровым Е.П. С другой стороны, эти авторы написали и другие книги, например «Золотой теленок».

Для соединения таких таблиц используется связь «многие ко многим».

Связь «многие ко многим» имеет место когда каждой записи одной таблицы соответствует несколько записей во второй, и наоборот, каждой записи второй таблицы соответствует несколько записей в первой. Обозначается это так:



Этапы реализации связи «многие ко многим»  на следующем примере:

Один автор может написать несколько книг, а одна книга может быть написана несколькими авторами. Для каждой книги известны ее количество и цена.

1. Создать таблицу author,  в которую включить уникальных авторов книг, хранящихся на складе:



2. В обеих таблицах необходимо определить первичный ключ, в нашем случае в таблице book он уже есть, поэтому достаточно включить первичный ключ author_id в таблицу author:



3. Создать новую таблицу-связку, состоящую из двух столбцов, соответствующих по имени и типу ключевым столбцам исходных таблиц. Каждый из этих столбцов является внешним ключом (FOREIGN KEY)  и связан с ключевым столбцом каждой таблицы. Для наглядности связи на схеме обозначаются стрелкой от ключевого столбца исходной таблицы к внешнему ключу связной таблицы.



4. Дальше необходимо определиться с первичным ключом таблицы-связки. Можно сделать два ключевых столбца, тогда все записи в этой таблице должны быть уникальными, то есть не повторяться. Для связи автор-книга этот вариант подходит. Но в некоторых случаях записи в таблице-связке могут повторяться, например, если мы будем продавать книги покупателям (один человек может купить несколько книг, а одну и ту же книгу могут купить несколько человек). Тогда в таблицу-связку включают дополнительные столбцы для идентификации записей, например, дату продажи,  также в таблицу-связку добавляют первичный ключ. Мы воспользуемся вторым способом:



Задание
Добавить новую характеристику книги – ее жанр, если считать, что каждая книга может относиться к нескольким жанрам, а каждый жанр включает несколько книг, то есть между ними определена связь «многие ко многим».

Расположите в правильном порядке этапы связывания таблиц genre и book.

Sort a given list
Correct answer from 31,406 learners
Total 75% of tries are correct
 You are right, well done!



======================================================
Задание
Выберите тип связи, который подходит для описания пар информационных объектов.

Fill in the blanks
Correct answer from 31,608 learners
Total 97% of tries are correct
 All is correct.
В группе учатся студенты, каждый студент может учиться только в одной группе: 
студент <--- группа

Студенты изучают несколько дисциплин, одну и ту же дисциплину могут изучать несколько студентов:

студент <---> дисциплина

В библиотеке студент может взять несколько книг, одну и ту же книгу могут взять несколько студентов (в разное время): 
студент <---> книга

Каждый студент родился в определенном городе, в одном городе родились несколько студентов: 
город ---> студент

Каждый город относится к определенной стране, в каждой стране есть несколько городов: 
страна ---> город
====================================================================
Задание
Дана таблица trip. Выберите одну или несколько схем, которые позволяют правильно представить информацию из этой таблицы в виде нескольких связанных таблиц.

trip_id	name	city	per_diem	date_first	date_last
1	Баранов П.Е.	Москва	700	2020-01-12	2020-01-17
2	Абрамова К.А.	Владивосток	450	2020-01-14	2020-01-27
3	Семенов И.В.	Москва	700	2020-01-23	2020-01-31
4	Семенов И.В.	Владивосток	450	2020-02-12	2020-02-22
Пояснение
Пояснение от пользователя @Дмитрий_Ефремов
Select all correct options from the list
Correct answer from 29,560 learners
Total 22% of tries are correct
 Correct.
You've solved a complex problem, congratulations! Now you can help other learners in comments by answering their questions, or compare your solution with others on solution forum.

==================================================
Задание
Создать таблицу author следующей структуры:

Поле	Тип, описание
author_id	INT PRIMARY KEY AUTO_INCREMENT
name_author	VARCHAR(50)
Enter an SQL query
Correct answer from 30,862 learners
Total 81% of tries are correct
 Totally right.
Affected rows: 0

Affected rows: 0

1
CREATE TABLE author(
2
    author_id INT PRIMARY KEY AUTO_INCREMENT,
3
    name_author VARCHAR(50)
4
);
5
​
6
SELECT * FROM author;
7
​==============================================================
Задание
Заполнить таблицу author. В нее включить следующих авторов:

Булгаков М.А.
Достоевский Ф.М.
Есенин С.А.
Пастернак Б.Л.
Результат
Enter an SQL query
Correct answer from 30,464 learners
Total 71% of tries are correct
 Yes!
Affected rows: 4

Query result:
+-----------+------------------+
| author_id | name_author      |
+-----------+------------------+
| 1         | Булгаков М.А.    |
| 2         | Достоевский Ф.М. |
| 3         | Есенин С.А.      |
| 4         | Пастернак Б.Л.   |
+-----------+------------------+
Affected rows: 4

SELECT*FROM author;
1
INSERT INTO author(name_author) 
2
VALUES ('Булгаков М.А.'), ('Достоевский Ф.М.'), ('Есенин С.А.'), ('Пастернак Б.Л.');
3
​
4
SELECT*FROM author;
5
​
6
​=======================================================
Создание таблицы с внешними ключами
При создании зависимой таблицы (таблицы, которая содержит внешние ключи) необходимо учитывать, что :

каждый внешний ключ должен иметь такой же тип данных, как связанное поле главной таблицы (в наших примерах это INT);
необходимо указать главную для нее таблицу и столбец, по которому осуществляется связь:
FOREIGN KEY (связанное_поле_зависимой_таблицы)  
REFERENCES главная_таблица (связанное_поле_главной_таблицы)
По умолчанию любой столбец, кроме ключевого, может содержать значение NULL. При создании таблицы это можно переопределить,  используя  ограничение NOT NULL для этого столбца:

CREATE TABLE таблица (
    столбец_1 INT NOT NULL, 
    столбец_2 VARCHAR(10) 
);
 В созданной таблице в столбец_1 не может содержать пустое значение, а столбец_2 - может.

Для внешних ключей рекомендуется устанавливать ограничение NOT NULL (если это совместимо с другими опциями, которые будут рассмотрены в следующем шаге).

 Пример

Создать таблицу book следующей структуры:

Поле	Тип, описание	Связи
book_id	INT PRIMARY KEY AUTO_INCREMENT	 
title	VARCHAR(50)	 
author_id	INT 	внешний ключ:
главная таблица author,
связанный столбец author.author_id,
пустое значение не допускается
price	DECIMAL(8, 2)	 
amount	INT	 
Запрос:

CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(50), 
    author_id INT NOT NULL, 
    price DECIMAL(8,2), 
    amount INT, 
    FOREIGN KEY (author_id)  REFERENCES author (author_id) 
);
Задание
Перепишите запрос на создание таблицы book , чтобы ее структура соответствовала структуре, показанной на логической схеме (таблица genre уже создана, порядок следования столбцов - как на логической схеме в таблице book, genre_id  - внешний ключ) . Для genre_id ограничение о недопустимости пустых значений не задавать. В качестве главной таблицы для описания поля  genre_idиспользовать таблицу genre следующей структуры:

Поле	Тип, описание
genre_id	INT PRIMARY KEY AUTO_INCREMENT
name_genre	VARCHAR(30)
Логическая схема (нужно создать только таблицу book):



Результат
Enter an SQL query
Correct answer from 29,180 learners
Total 46% of tries are correct
1
CREATE TABLE book(
2
    book_id INT PRIMARY KEY AUTO_INCREMENT,
3
    title VARCHAR(50),
4
    author_id INT NOT NULL,
5
    genre_id INT,
6
    price DECIMAL(8,2),
7
    amount INT,
8
    FOREIGN KEY (author_id) REFERENCES author (author_id),
9
    FOREIGN KEY (genre_id) REFERENCES genre (genre_id)
10
);
11
​
12
/*для начала понять, какие таблицы вообще созданы в БД*/
13
SELECT table_name, engine
14
FROM information_schema.tables
15
WHERE engine = 'InnoDB';
16
​
17
SHOW COLUMNS FROM book; /*Можно посмотреть   какие строки получаются при создании таблицы*/
18
​
19
/*OR*/
20
​
21
DESCRIBE book;
=====================================================================




